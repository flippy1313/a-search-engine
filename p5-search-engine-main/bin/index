#!/bin/bash

# Stop on errors
set -Eeuo pipefail

usage() {
  echo "Usage: $0 (start|stop|restart|status)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "start")
    FILE=search/search/var/index.sqlite3
    if test ! -f "$FILE"; then
        echo "Error:  can't find search database search/search/var/index.sqlite3"
        exit 1
    fi
    if pgrep -f "flask run --host 0.0.0.0 --port 9000" ||
        pgrep -f "flask run --host 0.0.0.0 --port 9001" ||
        pgrep -f "flask run --host 0.0.0.0 --port 9002"
    then
        echo "Error: index server is already running"
        exit 1
    fi 
    echo "starting index server ..."
    set -x
    mkdir -p var/log
    rm -f var/log/index.log
    FLASK_APP=index INDEX_PATH="inverted_index_0.txt" flask run --host 0.0.0.0 --port 9000 >> var/log/index.log 2>&1 &
    FLASK_APP=index INDEX_PATH="inverted_index_1.txt" flask run --host 0.0.0.0 --port 9001 >> var/log/index.log 2>&1 &
    FLASK_APP=index INDEX_PATH="inverted_index_2.txt" flask run --host 0.0.0.0 --port 9002 >> var/log/index.log 2>&1 &
    ;;

  "stop")
    echo "stopping index server ..."
    set -x
    pkill -f "flask run --host 0.0.0.0 --port 9000" || true
    pkill -f "flask run --host 0.0.0.0 --port 9001" || true
    pkill -f "flask run --host 0.0.0.0 --port 9002" || true
    ;;

  "restart")
    $0 stop
    $0 start
    ;;
  "status")
    set +o pipefail
    NPROCS=$(pgrep -f "flask run --host 0.0.0.0 --port 900[0-2]" | wc -l)
    set -o pipefail
    if [ "$NPROCS" -eq 3 ]; then
    echo "index server running"
    exit
    elif [ "$NPROCS" -eq 0 ]; then
    echo "index server stopped"
    exit 1
    else
    echo "index server error: found ${NPROCS} processes, expected 3"
    exit 2
    fi
    ;;
  *) # otherwise
    usage
    exit 1
    ;;
esac



